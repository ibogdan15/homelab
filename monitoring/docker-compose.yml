version: "3.9"

networks:
  web:
    external: true
  data_infra:
    external: true

services:

# GRAFANA
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - 'grafana.conf'
    # this is root, if you suddenly lose all data, run docker-compose without sudo
    user: "0" 
    external_links:
      - influxdb
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - ~/data/grafana/data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - web
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - traefik.enable=true

      # Basic
      - traefik.http.routers.grafana_basic.entrypoints=web
      - traefik.http.routers.grafana_basic.rule=Host(`${GRAFANA_HOST}`)
      - traefik.http.middlewares.grafana-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.grafana_basic.middlewares=grafana-https-redirect
      - traefik.http.services.grafana_basic.loadbalancer.server.port=3000
      # Secure
      - traefik.http.routers.grafana.rule=Host(`${GRAFANA_HOST}`)
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=lets-encrypt
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.docker.network=web

    
# PROMETHEUS
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    links:
      - cadvisor:cadvisor
      - node_exporter:node_exporter
    networks:
      - data_infra

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - 7777:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - data_infra

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - 9100:9100
    networks:
      - data_infra

  mysql_exporter:
    image: prom/mysqld-exporter
    container_name: mysql_exporter
    restart: unless-stopped
    ports:
      - 9104:9104
    networks:
      - data_infra
    environment: 
      - DATA_SOURCE_NAME=${MYSQL_EXPORTER_DATA_SOURCE_NAME}
      - collect.info_schema.tablestats=true
      - collect.info_schema.userstats=true
      - collect.info_schema.query_response_time=true
      - collect.auto_increment.columns=true
      - collect.binlog_size=true
      - collect.perf_schema.eventsstatements=true
      - collect.perf_schema.eventswaits=true
      - collect.perf_schema.file_events=true
      - collect.perf_schema.indexiowaits=true
      - collect.perf_schema.tableiowaits=true
      - collect.perf_schema.tablelocks=true

